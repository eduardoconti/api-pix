version: '3.7'

services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-pix1
      - api-pix2
    cpus: 0.1
    mem_limit: 256M

  api-pix1: &api-pix
    hostname: api-pix1
    restart: on-failure
    build: .
    volumes:
      - .:/app
    expose:
      - "3000"
    env_file:
      - .env
    command: yarn start:dev
    depends_on:
      - redis
      - mongo
      - apm-server
    cpus: 0.5
    mem_limit: 2048M  

  api-pix2:
    <<: *api-pix
    hostname: api-pix2

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PASSWORD} --save 20 1 --loglevel warning
    volumes: 
      - redis:/data
    cpus: 0.1
    mem_limit: 256M  

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  
  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    cpus: 0.1
    mem_limit: 256M 

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.16
    depends_on:
      - elasticsearch
      - kibana
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
    cpus: 0.1
    mem_limit: 256M 

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - ${DB_MONGO_PORT}:${DB_MONGO_PORT}
    volumes:
      - mongo-apipix-data:/data/db
    restart: always
    cpus: 1
    mem_limit: 1024M 
    
volumes:
  redis:
  es-data:
  mongo-apipix-data:
