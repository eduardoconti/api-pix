generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model charge {
  id                        String                      @id
  status                    chargeStatus
  provider                  provider
  amount                    Int
  provider_id               String?
  emv                       String?
  qr_code                   String?
  e2e_id                    String?
  created_at                DateTime                    @default(now())
  updated_at                DateTime                    @updatedAt
  user_id                   String
  user                      user                        @relation(fields: [user_id], references: [id])
  user_webhook_notification user_webhook_notification[]

  @@index([status], type: Hash)
  @@index([provider, provider_id], type: BTree)
}

enum chargeStatus {
  ACTIVE
  PAYED
  EXPIRED
  FAILED
  PENDING
}

model webhook {
  id          String      @id
  type        webhookType
  provider    provider
  provider_id String
  payload     Json
  amount      Int
  e2e_id      String
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
}

enum webhookType {
  CHARGE_PAYED
  CHARGE_REFUNDED
}

model outbox {
  id             String              @id
  aggregate_id   String
  aggregate_type outboxAggregateType
  event_id       String
  payload        Json
  published      Boolean
  created_at     DateTime            @default(now())
  updated_at     DateTime            @updatedAt

  @@index([aggregate_type, published], type: BTree)
}

enum outboxAggregateType {
  WEBHOOK
  CHARGE
  USER
  USER_WEBHOOK_NOTIFICATION
}

enum provider {
  CELCOIN
}

model user {
  id                        String                      @id
  name                      String
  email                     String                      @unique
  password                  String
  status                    userStatus
  created_at                DateTime                    @default(now())
  updated_at                DateTime                    @updatedAt
  userWebhookHost           userWebhookHost[]
  charge                    charge[]
  user_webhook_notification user_webhook_notification[]
}

model userWebhookHost {
  id           String      @id
  user_id      String
  webhook_host String
  type         webhookType
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  user         user        @relation(fields: [user_id], references: [id])
}

enum userStatus {
  ACTIVE
  DISABLED
}

model user_webhook_notification {
  id           String      @id
  user_id      String
  type         webhookType
  charge_id    String
  payload      Json
  attempts     Int
  delivered_at DateTime?
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  user         user        @relation(fields: [user_id], references: [id])
  charge       charge      @relation(fields: [charge_id], references: [id])
}
